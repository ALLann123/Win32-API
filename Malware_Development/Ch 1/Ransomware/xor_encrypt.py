#!/usr/bin/env python3
import sys
import os

def xor_encrypt_file(input_path, output_path, key):
    """Encrypt/decrypt file using XOR operation"""
    try:
        with open(input_path, 'rb') as f_input:
            with open(output_path, 'wb') as f_output:
                while True:
                    chunk = f_input.read(4096)  # Read in chunks
                    if not chunk:
                        break
                    # XOR each byte with the key
                    encrypted_chunk = bytes([b ^ key for b in chunk])
                    f_output.write(encrypted_chunk)
        return True
    except Exception as e:
        print(f"Error: {e}")
        return False

def main():
    if len(sys.argv) != 4:
        print("Usage: python xor_encrypt.py <input_file> <output_file> <key_character>")
        sys.exit(1)
    
    input_file = sys.argv[1]
    output_file = sys.argv[2]
    key_char = sys.argv[3]
    
    if not os.path.exists(input_file):
        print(f"Error: Input file '{input_file}' not found")
        sys.exit(1)
    
    # Convert key character to its ASCII value
    key = ord(key_char[0])
    
    print(f"Encrypting {input_file} to {output_file} using XOR key '{key_char}' (ASCII: {key})")
    
    if xor_encrypt_file(input_file, output_file, key):
        print("Encryption completed successfully!")
        
        # Show file sizes for verification
        input_size = os.path.getsize(input_file)
        output_size = os.path.getsize(output_file)
        print(f"Input size: {input_size} bytes")
        print(f"Output size: {output_size} bytes")
    else:
        print("Encryption failed!")
        sys.exit(1)

if __name__ == "__main__":
    main()