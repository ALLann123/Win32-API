#include <windows.h>

// define function pointer types for DLL functions
typedef int(__cdecl *CatFunction)(LPCTSTR message);
typedef int(__cdecl *BirdFunction)(LPCTSTR message);

int main(void)
{
    HINSTANCE petDll;
    CatFunction catFunction;
    BirdFunction birdFunction;
    BOOL unloadResult;

    // step 1 Load the pet.dll library into memory
    petDll = LoadLibrary("pet.dll");

    // Check if DLL loaded successfully
    if (petDll != NULL)
    {
        // Step 2: Get the memory address of the function we want to call
        catFunction = (CatFunction)GetProcAddress(petDll, "Cat");
        birdFunction = (BirdFunction)GetProcAddress(petDll, "Bird");

        // Step 3: If we got the function address call, them
        if ((catFunction != NULL) && (birdFunction != NULL))
        {
            (catFunction)("meow-meuw");
            (catFunction)("mmmeoww");
            (birdFunction)("tweet-tweet");
        }

        // step 4: Unload the DLL from memory
        unloadResult = FreeLibrary(petDll);
    }

    return 0;
}