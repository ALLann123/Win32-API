 Key Concepts to Start in Malware Development
What is a process?
- A process is an instance of a program runing in your computer.
- In windows, each time you click a .exe file a new process is created.
Properties of the process:
1. Its own virtual memory space.
2. A list of loaded DLLs(modules)
3. At least one thread.(Usually more)
4. A unique process ID.

What is a thread?
- Is the smallest unit of execution in a process. 
- Think of thread as workers inside the process doing the 
actual computing.
- Multiple threads in a process can:
    a. Share the same memory
    b. Run concurrently(or in parallel on multicore CPUs)
    c. Be created or killed dynamically
Example:
- Malware often creates a remote thread in another process using
**CreateRemoteThread()** to run its injected payload.


Memory where Malware Lives and workers
- When you run a program, it gets loaded into virtual memory.
- This is where our shellcode resides in.
Malware often uses:
1. VirtualAlloc or NtAllocateVirtualMemory to reserve memory.
2. WriteProcessMemory to inject payloads
3. CreateRemoteThread or NtCreateThreadEx to tun code in memory.
**Reflective DLL loading, Manual Mapping and shellcode injection all depend on
manipulating memory at run time**


Evasion
- malware cant do that much if it's caught right away.
EDRs and AVs detect malware using:
1. Static Signatures(known strings, file hashes)
2. Behavioral patterns(API calls, suspicious memory access)
3. Memory Scanning(Looking for shellcode patterns)
4. Hooking common APIs(CreateRemoteThread, VirtualAllocEx, etc)

Evasion Techniques:
1. String Obfuscation(to break signatures)
2. Indirect Syscalls(to bypass API hooks)
3. Manual mapping(load a DLL without touching disk)
4. Unhooking(restore original functions from ntdll.dll)
5. Timing and logic bombs(Delay execution to avoid sandbox detection)

