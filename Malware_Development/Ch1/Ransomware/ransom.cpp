#include <windows.h>
#include <wincrypt.h>
#pragma comment(lib, "crypt32.lib")
#pragma comment(lib, "advapi32.lib")

void encrypt_file(LPCWSTR filename)
{
    //Buffer to hold the plain text and cipher text
    BYTE buffer[1024];
    DWORD bytesRead, bytesWritten;

    //open the original file and create the new file
    HANDLE originalFile=CreateFileW(filename, GENERIC_READ, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);
    HANDLE newFile = CreateFileW(L"encrypted", GENERIC_WRITE, 0, NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);

    //Get a handle to CSP(Cryptographic Service Provider)
    HCRYPTPROV hProv;
    CryptAcquireContextW(&hProv, NULL, NULL, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT);

    //GENERATE the session key
    HCRYPTKEY hKey;
    CryptGenKey(hProv, CALG_RC4, CRYPT_EXPORTABLE, &hKey);

    //read the plaintext file, encrypt the buffer, then write to the new file
    while(ReadFile(originalFile, buffer, sizeof(buffer), &bytesRead, NULL) && bytesRead > 0)
    {
        CryptEncrypt(hKey, 0, bytesRead<sizeof(buffer), 0, buffer, &bytesRead, sizeof(buffer));

        WriteFile(newFile, buffer, bytesRead, &bytesWritten, NULL);
    }

    //clean up
    CryptReleaseContext(hProv, 0);
    CryptDestroyKey(hKey);
    CloseHandle(originalFile);
    CloseHandle(newFile);

}

int main()
{
    //pass the file
    encrypt_file(L"text.txt");

    return 0;
}